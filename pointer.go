package main

/*
指针(Pointer)在Go语言当中的两个核心概念
类型指针
允许对这个指针类型的数据进行修改，传递数据可以直接使用指针，而无须拷贝数据

类型指针不能进行偏移和运算

指针的几个核心概念
* 指针地址
* 指针类型
* 指针取值

指针地址
一个指针变量可以指向任何一个值的内存地址，它所指向的值的内存地址在 32 和 64 位机器上分别占用 4 或 8 个字节，占用字节的大小与所指向的值的大小无关。
当一个指针被定义后没有分配到任何变量时，它的默认值为 nil。指针变量通常缩写为 ptr。

变量、指针和地址三者的关系是，每个变量都拥有地址，指针的值就是地址。

*操作符作为右值时，意义是取指针的值，作为左值时，也就是放在赋值操作符的左边时，表示 a 指针指向的变量。

*操作符的根本意义就是操作指针指向的变量。当操作在右值时，就是取指向变量的值，当操作在左值时，就是将值设置给指向的变量。

&和*本质上是直接引用与简介引用的区别

&只能位于变量的前面，表示取变量的内存地址

*只能位于指针的前面，表示取指针的指向的内存地址的值

**表示取指针的内存地址
*/
