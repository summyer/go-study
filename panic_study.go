package main

/*
Go之函数之宕机(panic)
宕机是Go语言再运行期检查出的异常(不是在编译期)--->如数组访问越界、空指针引用等
当宕机发生时：
* 程序会中断运行，并立即执行在该 goroutine（可以先理解成线程）中被延迟的函数（defer 机制）
* 程序崩溃、输出日志信息(panic value和函数调用的堆栈跟踪信息)
* Go语言程序在宕机时，会将堆栈和 goroutine 信息输出到控制台

panic的应用场景：

* panic 一般用于严重错误
* 大部分漏洞应使用Go语言提供的错误机制而非panic

发生宕机的几种情况
* 在运行依赖的必备资源缺失时主动触发宕机
* 手动触发宕机


举例：在运行依赖的必备资源缺失时主动触发宕机
编译正则表达式的两种函数：

func Compile(expr string) (*Regexp, error) //这是位于regexp包下的一个函数
/*
发生错误时返回编译错误同时返回 Regexp 为 nil
适用于在编译错误时获得编译错误进行处理，同时继续后续执行的环境
*/
//func MustCompile(str string) *Regexp
/*
编译正则表达式发生错误时，使用 panic 触发宕机
适用于直接使用正则表达式而无须处理正则表达式错误的情况
*/

// 举例：手动触发宕机
//使用内建函数panic()即可触发宕机
